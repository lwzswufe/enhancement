import redis 

# host是redis主机，需要redis服务端和客户端都启动 redis默认端口是6379
r = redis.Redis(host='localhost', port=6379, decode_responses=True) 

'''
1.Zadd 命令用于将一个或多个成员元素及其分数值加入到有序集当中。
如果某个成员已经是有序集的成员，那么更新这个成员的分数值，并通过重新插入这个成员元素，来保证该成员在正确的位置上。
分数值可以是整数值或双精度浮点数。
如果有序集合 key 不存在，则创建一个空的有序集并执行 ZADD 操作。
当 key 存在但不是有序集类型时，返回一个错误。

2.Zcard 命令用于计算集合中元素的数量。
当 key 存在且是有序集类型时，返回有序集的基数。 当 key 不存在时，返回 0 。

3.Zcount 命令用于计算有序集合中指定分数区间的成员数量。分数值在 min 和 max 之间的成员的数量。

4.Zincrby 命令对有序集合中指定成员的分数加上增量 increment
可以通过传递一个负数值 increment ，让分数减去相应的值，比如 ZINCRBY key -5 member ，就是让 member 的 score 值减去 5 。
当 key 不存在，或分数不是 key 的成员时， ZINCRBY key increment member 等同于 ZADD key increment member 。
当 key 不是有序集类型时，返回一个错误。
分数值可以是整数值或双精度浮点数。
member 成员的新分数值，以字符串形式表示。

5.Zinterstore 命令计算给定的一个或多个有序集的交集，其中给定 key 的数量必须以 numkeys 参数指定，并将该交集(结果集)储存到 destination 。
默认情况下，结果集中某个成员的分数值是所有给定集下该成员分数值之和。

6.Zlexcount 命令在计算有序集合中指定字典区间内成员数量。

7.Zrange 返回有序集中，指定区间内的成员。
其中成员的位置按分数值递增(从小到大)来排序。
具有相同分数值的成员按字典序(lexicographical order )来排列。
如果你需要成员按值递减(从大到小)来排列，请使用 ZREVRANGE 命令。
下标参数 start 和 stop 都以 0 为底，也就是说，以 0 表示有序集第一个成员，以 1 表示有序集第二个成员，以此类推。
你也可以使用负数下标，以 -1 表示最后一个成员， -2 表示倒数第二个成员，以此类推。

8. Zrangebylex 通过字典区间返回有序集合的成员。
当有序集合的所有成员都具有相同的分值时，有序集合的元素会根据成员的 值 （lexicographical ordering）来进行排序，而这个命令则可以返回给定的有序集合键 key 中， 元素的值介于 min 和 max 之间的成员
对集合中的每个成员进行逐个字节的对比（byte-by-byte compare）， 并按照从低到高的顺序， 返回排序后的集合成员。 如果两个字符串有一部分内容是相同的话， 那么命令会认为较长的字符串比较短的字符串要大

9.Zrangebyscore 返回有序集合中指定分数区间的成员列表。有序集成员按分数值递增(从小到大)次序排列。
具有相同分数值的成员按字典序来排列(该属性是有序集提供的，不需要额外的计算)。
默认情况下，区间的取值使用闭区间 (小于等于或大于等于)，你也可以通过给参数前增加 ( 符号来使用可选的开区间 (小于或大于)。

10.Zrank 返回有序集中指定成员的排名。其中有序集成员按分数值递增(从小到大)顺序排列。
如果成员是有序集 key 的成员，返回 member 的排名。 如果成员不是有序集 key 的成员，返回 None 。

11. Zrem 命令用于移除有序集中的一个或多个成员，不存在的成员将被忽略。
当 key 存在但不是有序集类型时，返回一个错误。

12.Zremrangebylex 命令用于移除有序集合中给定的字典区间的所有成员。
被成功移除的成员的数量，不包括被忽略的成员。

13. Zremrangebyrank 命令用于移除有序集中，指定排名(rank)区间内的所有成员。

14.Zremrangebyscore 命令用于移除有序集中，指定分数（score）区间内的所有成员。

15.Zrevrange 命令返回有序集中，指定区间内的成员。
其中成员的位置按分数值递减(从大到小)来排列。
具有相同分数值的成员按字典序的逆序(reverse lexicographical order)排列。
除了成员按分数值递减的次序排列这一点外， ZREVRANGE 命令的其他方面和 ZRANGE 命令一样。

16.Zrevrangebyscore 返回有序集中指定分数区间内的所有的成员。有序集成员按分数值递减(从大到小)的次序排列。
具有相同分数值的成员按字典序的逆序(reverse lexicographical order )排列。
除了成员按分数值递减的次序排列这一点外， ZREVRANGEBYSCORE 命令的其他方面和 ZRANGEBYSCORE 命令一样。

17. Zrevrank 命令返回有序集中成员的排名。其中有序集成员按分数值递减(从大到小)排序。
排名以 0 为底，也就是说， 分数值最大的成员排名为 0 。
使用 ZRANK 命令可以获得成员按分数值递增(从小到大)排列的排名。

18.Zscore 命令返回有序集中，成员的分数值。 如果成员元素不是有序集 key 的成员，或 key 不存在，返回 None 。

19.Zunionstore 命令计算给定的一个或多个有序集的并集，其中给定 key 的数量必须以 numkeys 参数指定，并将该并集(结果集)储存到 destination 。
默认情况下，结果集中某个成员的分数值是所有给定集下该成员分数值之和 。
保存到 destination 的结果集的成员数量。

20.  Zscan 命令用于迭代有序集合中的元素（包括元素成员和元素分值）
返回的每个元素都是一个有序集合元素，一个有序集合元素由一个成员（member）和一个分值（score）组成。
'''

print("将2个成员元素及其分数(1: 2, 3: 3)加入到有序集 1", r.zadd("1", {"1": 2, "3": 3})) #输出的结果是2
print("将1个成员元素及其分数(2: 2)值加入到有序集 1", r.zadd(name="1", mapping={"2":2}))     #输出的结果是1
print("将1个成员元素及其分数(1: 1)加入到有序集 1 元素1已存在 更新分数值", r.zadd("1",{"1": 1}))     #输出的结果是0
print("将1个成员元素及其分数(3: 4)加入到有序集 1 元素3已存在 更新分数值", r.zadd("1",{"3": 4}))     #输出的结果是0
print("输出有序集 1中[0, -1]的内容", r.zrange("1",0,-1))    #输出的结果是 ['1', '2', '3']

print("计算集合 1中元素的数量:", r.zcard(1))            #输出的结果是3
print("有序集合 1中指定分数区间[0, 5]的成员数量:", r.zcount("1",min=0,max=5))     #输出的结果是3
print("有序集合 1中指定分数区间[0, 2]的成员数量:", r.zcount("1",min=0,max=2))     #输出的结果是2
print("有序集合 1中指定分数区间[2, 5]的成员数量:", r.zcount("1",min=2,max=5))     #输出的结果是2

print("对有序集合 1中指定成员 1的分数加上增量 5:", r.zincrby(name=1,value=1,amount=5))    #输出的结果是6.0
print("输出有序集 1中[0, -1]的内容", r.zrange("1",0,-1))    #输出的结果是 ['1', '2', '3']

print("将3个成员元素及其分数加入到有序集 2", r.zadd("2", {"a": 1, "b": 2, "c": 3}))     #输出的结果是3
print("将3个成员元素及其分数加入到有序集 2", r.zadd("2", {"e": 4, "aa": 5, "z": 6}))     #输出的结果是3
print("输出有序集 2中[0, -1]的内容", r.zrange("1",0,-1))    #输出的结果是 ['1', '2', '3']

print("计算有序集合2中指定字典区间[a, e]内成员数量:", r.zlexcount(name=2, min="[a", max="[e"))   #输出的结果是6
print("计算有序集合2中指定字典区间[a, f]内成员数量:", r.zlexcount(name=2, min="[a", max="[f"))   #输出的结果是6
print("计算有序集合2中指定字典区间正负无穷内成员数量:", r.zlexcount(name=2, min="-", max="+"))   #输出的结果是6

print("计算有序集合2中指定字典区间[a, e]内成员数量:", r.zrangebylex(name=2, min="[a", max="[e"))   #输出的结果是 ['b', 'c', 'e', 'f', 'd']
print("计算有序集合2中指定字典区间[a, f)内成员数量:", r.zrangebylex(name=2, min="[a", max="(f"))   #输出的结果是 ['c', 'e', 'f', 'd']
print("计算有序集合2中指定字典区间[a, f]内成员数量:", r.zrangebylex(name=2, min="[a", max="[f"))   #输出的结果是 ['c', 'e', 'f', 'd']

print("返回有序集2中指定成员e的排名:", r.zrank("2","e")) 
print("移除有序集2中的一个成员:", r.zrem("2","c"))                      #输出的结果是1
print("输出有序集2中[0, -1]的内容:", r.zrange("2",0,-1))    #输出的结果是 ['1', '2', '3']
print("返回有序集2中，成员a的分数值:", r.zscore(name="2",value="a"))          #输出的结果是1.0

print("返回有序集2中的元素:", r.zscan(name="2"))  

r.unlink("1")                             # 删除集合 1
r.unlink("2")                             # 删除集合 2